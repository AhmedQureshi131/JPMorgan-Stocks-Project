From 2ab43c6395d2be1e3b92b1295e49b7523a8faad2 Mon Sep 17 00:00:00 2001
From: AhmedAliQureshi <axq02670@ucmo.edu>
Date: Sat, 14 Mar 2020 18:19:27 -0500
Subject: [PATCH] Create Patch File

---
 0001-Create-Patch-File.patch |  49 +++++++++++++++++++++++++++++++++++++++++++
 client.pyc                   | Bin 0 -> 1362 bytes
 client_test.py               |  10 +++++----
 3 files changed, 55 insertions(+), 4 deletions(-)
 create mode 100644 0001-Create-Patch-File.patch
 create mode 100644 client.pyc

diff --git a/0001-Create-Patch-File.patch b/0001-Create-Patch-File.patch
new file mode 100644
index 0000000..11d13f5
--- /dev/null
+++ b/0001-Create-Patch-File.patch
@@ -0,0 +1,49 @@
+From f5d8ec2aca8f8baec14ffd92b65844fc296f627e Mon Sep 17 00:00:00 2001
+From: AhmedAliQureshi <axq02670@ucmo.edu>
+Date: Sat, 14 Mar 2020 17:40:55 -0500
+Subject: [PATCH] Create Patch File
+
+---
+ client.py | 13 +++++++++----
+ 1 file changed, 9 insertions(+), 4 deletions(-)
+
+diff --git a/client.py b/client.py
+index 40badcd..480463f 100644
+--- a/client.py
++++ b/client.py
+@@ -35,14 +35,17 @@ def getDataPoint(quote):
+ 	stock = quote['stock']
+ 	bid_price = float(quote['top_bid']['price'])
+ 	ask_price = float(quote['top_ask']['price'])
+-	price = bid_price
++	price = (bid_price+ask_price) / 2
+ 	return stock, bid_price, ask_price, price
+ 
+ def getRatio(price_a, price_b):
+ 	""" Get ratio of price_a and price_b """
+ 	""" ------------- Update this function ------------- """
+ 	""" Also create some unit tests for this function in client_test.py """
+-	return 1
++	if(price_b == 0):
++          #when price_b is 0 avoid throwing ZeroDivisonError
++              return
++        return price_a/price_b
+ 
+ # Main
+ if __name__ == "__main__":
+@@ -52,8 +55,10 @@ if __name__ == "__main__":
+ 		quotes = json.loads(urllib2.urlopen(QUERY.format(random.random())).read())
+ 
+ 		""" ----------- Update to get the ratio --------------- """
++		prices = {}	
+ 		for quote in quotes:
+ 			stock, bid_price, ask_price, price = getDataPoint(quote)
++			prices[stock] = price
+ 			print "Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price)
+-
+-		print "Ratio %s" % getRatio(price, price)
++                  
++		print "Ratio %s" % getRatio(prices['ABC'], prices['DEF'])
+-- 
+2.15.0
+
diff --git a/client.pyc b/client.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..46549f11ea4cd69fee00776d7bd63d3d914ce346
GIT binary patch
literal 1362
zcmbtTUvC>l5dYnuxUuWBY5tV@Z9%HIN=@DJR7EYcB%uh2D0LK7oPg8jb`qa+zH@HZ
zC{>-O^jq)&c;VadQQ#eBHg-Wg!rkrc%<RnU%x~tR-&Z=n9gTm?F@J9G{(_fX2>`=i
zfD%YQ@Bz|bp%0OU3qC>`!LTNVVSWiF#(Q>b!7O>^251?kg|iS%JGl52)CMi#D!}d!
zKO^mcLX2*LfKe9|W3&Q_Fp6*mG2(A@YtE;)QE=#0T<n2vv;T9XcR(%B9kKg9M!JS{
z9q9(rO%Q*ppfx-*oWmMu9ke0ZlNfhjeSQ85-k4<&pRK~Q(UYx%-c{&NPw}SmC>$m?
z8J6Nte)jFh%nqHKZ1?+Ro$GQ~Teto6@zcls^C>lNzbMS}cbCN<3}Ma-OT1!UJG|@x
zlbH|MyA0s2g%CZ4t;gA4h6`Q%w=Tjg#4N%`4Cdx#j9D;O%wj3yFlkBTZ6@lVsm(Me
zrOQ&)C&~>;RYZo2`bn2lvdY!!lqzbpV<Tm>)04WWoN|(-b#;E`WC&b6$&L%-wUegE
z>4R3=vm#`RL`w7LCuOZ&BK}@HpVp2BEWx#zaFpyif=KLrEe(7Ou}Xy4CrtWBmKxjF
z!!a3M7U$E3?6By6bMWoXmZN;Q<=B1eNk1<Os@$W=Ti0c;Q*ygp#(^(GLUouR>I577
z-U@QLXt8_??y-U)<k^;K<bH=Z<d(2%^Dv3{(0;;1y&|U=rlJ-geFd3Tx-xVASn(7B
z`#$|dF7Ob|4gbL(Ut5Urf2?wuUAfAEB=bPRNWT$x!#HqqmStmIR9R*}W#P5JZ`6IO
zv{MPAzkT06R1BQoeR|A2u;S<=vZ<4*Uw*mc_uaj(lDjPX5~fXA7RR4CnO|3o$ulEc
zS59(h7>;`EyZ-uUZ}6Rynb;rr(DJ{`v#a!&vdnv2unU(WcA59%*)eu;RXyRpO5l^a
z8EfY+Ye*Zf^K)fA>#MK>896^_1MwNi-2Q8<5?1{m)Sr#{cPi=gO$nozbOZlJt*8~Y
V+wD#_S`W6OR<IJ>3pznB{0l7+AO`>d

literal 0
HcmV?d00001

diff --git a/client_test.py b/client_test.py
index a608a01..e3ac72c 100644
--- a/client_test.py
+++ b/client_test.py
@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,10 +17,10 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
-
-  """ ------------ Add more unit tests ------------ """
-
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+		
+  """ ------------- Add more unit tests ------------ """
 
 
 if __name__ == '__main__':
-- 
2.15.0

